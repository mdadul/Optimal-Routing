//
// Generated file, do not edit! Created by opp_msgtool 6.0 from fireNETMSG.msg.
//

#ifndef __FIRENETMSG_M_H
#define __FIRENETMSG_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class fireNetmsg;
/**
 * Class generated from <tt>fireNETMSG.msg:2</tt> by opp_msgtool.
 * <pre>
 * message fireNetmsg
 * {
 *     int source;
 *     int destination;
 *     int hopCount = 0;
 * }
 * </pre>
 */
class fireNetmsg : public ::omnetpp::cMessage
{
  protected:
    int source = 0;
    int destination = 0;
    int hopCount = 0;

  private:
    void copy(const fireNetmsg& other);

  protected:
    bool operator==(const fireNetmsg&) = delete;

  public:
    fireNetmsg(const char *name=nullptr, short kind=0);
    fireNetmsg(const fireNetmsg& other);
    virtual ~fireNetmsg();
    fireNetmsg& operator=(const fireNetmsg& other);
    virtual fireNetmsg *dup() const override {return new fireNetmsg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getSource() const;
    virtual void setSource(int source);

    virtual int getDestination() const;
    virtual void setDestination(int destination);

    virtual int getHopCount() const;
    virtual void setHopCount(int hopCount);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const fireNetmsg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, fireNetmsg& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline fireNetmsg *fromAnyPtr(any_ptr ptr) { return check_and_cast<fireNetmsg*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __FIRENETMSG_M_H

